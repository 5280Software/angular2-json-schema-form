{
  "version": 3,
  "file": "convert-schema-to-draft6.function.js",
  "sources": [
    "ng://angular2-json-schema-form/src/lib/src/shared/convert-schema-to-draft6.function.ts"
  ],
  "sourcesContent": [
    "import * as _ from 'lodash';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * @param  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * @param  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * @return { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean; draft?: number; }\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [ ...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) ];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [ convertSchemaToDraft6(newSchema.extends, { changed, draft }) ];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [ newSchema.dependencies[key] ]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [ properties[key].requires ] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription;\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n      // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n        // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = [ 'additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = [ 'multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = [ 'maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = [ 'maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array':   [ ...numberKeys, ...objectKeys, ...stringKeys ],\n            'integer': [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'number':  [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'object':  [  ...arrayKeys, ...numberKeys, ...stringKeys ],\n            'string':  [  ...arrayKeys, ...numberKeys, ...objectKeys ],\n            'all':     [  ...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys ],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![ ...(filterKeys[newType.type] || filterKeys.all), 'type', 'default' ]\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n        // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        [ 'definitions', 'dependencies', 'properties', 'patternProperties' ]\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        [ 'items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not' ].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = _.cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
