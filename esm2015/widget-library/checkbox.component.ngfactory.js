/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "./checkbox.component";
import * as i4 from "../json-schema-form.service";
var styles_CheckboxComponent = [];
var RenderType_CheckboxComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CheckboxComponent, data: {} });
export { RenderType_CheckboxComponent as RenderType_CheckboxComponent };
function View_CheckboxComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, "input", [["type", "checkbox"]], [[1, "aria-describedby", 0], [8, "className", 0], [8, "id", 0], [8, "name", 0], [8, "readOnly", 0], [2, "ng-untouched", null], [2, "ng-touched", null], [2, "ng-pristine", null], [2, "ng-dirty", null], [2, "ng-valid", null], [2, "ng-invalid", null], [2, "ng-pending", null]], [[null, "change"], [null, "blur"]], function (_v, en, $event) { var ad = true; if (("change" === en)) {
        var pd_0 = (i0.ɵnov(_v, 1).onChange($event.target.checked) !== false);
        ad = (pd_0 && ad);
    } if (("blur" === en)) {
        var pd_1 = (i0.ɵnov(_v, 1).onTouched() !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), i0.ɵdid(1, 16384, null, 0, i1.CheckboxControlValueAccessor, [i0.Renderer2, i0.ElementRef], null, null), i0.ɵprd(1024, null, i1.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.CheckboxControlValueAccessor]), i0.ɵdid(3, 540672, null, 0, i1.FormControlDirective, [[8, null], [8, null], [6, i1.NG_VALUE_ACCESSOR], [2, i1.ɵangular_packages_forms_forms_j]], { form: [0, "form"] }, null), i0.ɵprd(2048, null, i1.NgControl, null, [i1.FormControlDirective]), i0.ɵdid(5, 16384, null, 0, i1.NgControlStatus, [[4, i1.NgControl]], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = _co.formControl; _ck(_v, 3, 0, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)) + "Status"); var currVal_1 = ((((_co.options == null) ? null : _co.options.fieldHtmlClass) || "") + (_co.isChecked ? (((" " + (((_co.options == null) ? null : _co.options.activeClass) || "")) + " ") + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.selected)) || "")) : (" " + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.unselected)) || "")))); var currVal_2 = ("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)); var currVal_3 = _co.controlName; var currVal_4 = (((_co.options == null) ? null : _co.options.readonly) ? "readonly" : null); var currVal_5 = i0.ɵnov(_v, 5).ngClassUntouched; var currVal_6 = i0.ɵnov(_v, 5).ngClassTouched; var currVal_7 = i0.ɵnov(_v, 5).ngClassPristine; var currVal_8 = i0.ɵnov(_v, 5).ngClassDirty; var currVal_9 = i0.ɵnov(_v, 5).ngClassValid; var currVal_10 = i0.ɵnov(_v, 5).ngClassInvalid; var currVal_11 = i0.ɵnov(_v, 5).ngClassPending; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }
function View_CheckboxComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "input", [["type", "checkbox"]], [[1, "aria-describedby", 0], [8, "checked", 0], [8, "className", 0], [8, "disabled", 0], [8, "id", 0], [8, "name", 0], [8, "readOnly", 0], [8, "value", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.updateValue($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)) + "Status"); var currVal_1 = (_co.isChecked ? "checked" : null); var currVal_2 = ((((_co.options == null) ? null : _co.options.fieldHtmlClass) || "") + (_co.isChecked ? (((" " + (((_co.options == null) ? null : _co.options.activeClass) || "")) + " ") + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.selected)) || "")) : (" " + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.unselected)) || "")))); var currVal_3 = _co.controlDisabled; var currVal_4 = ("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)); var currVal_5 = _co.controlName; var currVal_6 = (((_co.options == null) ? null : _co.options.readonly) ? "readonly" : null); var currVal_7 = _co.controlValue; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }); }
function View_CheckboxComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "span", [], [[4, "display", null], [8, "innerHTML", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (((_co.options == null) ? null : _co.options.notitle) ? "none" : ""); var currVal_1 = ((_co.options == null) ? null : _co.options.title); _ck(_v, 0, 0, currVal_0, currVal_1); }); }
export function View_CheckboxComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, "label", [], [[1, "for", 0], [8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxComponent_1)), i0.ɵdid(2, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxComponent_2)), i0.ɵdid(4, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxComponent_3)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.boundControl; _ck(_v, 2, 0, currVal_2); var currVal_3 = !_co.boundControl; _ck(_v, 4, 0, currVal_3); var currVal_4 = ((_co.options == null) ? null : _co.options.title); _ck(_v, 6, 0, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = ("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)); var currVal_1 = (((_co.options == null) ? null : _co.options.itemLabelHtmlClass) || ""); _ck(_v, 0, 0, currVal_0, currVal_1); }); }
export function View_CheckboxComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "checkbox-widget", [], null, null, null, View_CheckboxComponent_0, RenderType_CheckboxComponent)), i0.ɵdid(1, 114688, null, 0, i3.CheckboxComponent, [i4.JsonSchemaFormService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var CheckboxComponentNgFactory = i0.ɵccf("checkbox-widget", i3.CheckboxComponent, View_CheckboxComponent_Host_0, { layoutNode: "layoutNode", layoutIndex: "layoutIndex", dataIndex: "dataIndex" }, {}, []);
export { CheckboxComponentNgFactory as CheckboxComponentNgFactory };
//# sourceMappingURL=checkbox.component.ngfactory.js.map
