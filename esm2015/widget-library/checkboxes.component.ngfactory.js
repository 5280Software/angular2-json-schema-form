/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./checkboxes.component";
import * as i3 from "../json-schema-form.service";
var styles_CheckboxesComponent = [];
var RenderType_CheckboxesComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CheckboxesComponent, data: {} });
export { RenderType_CheckboxesComponent as RenderType_CheckboxesComponent };
function View_CheckboxesComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "label", [], [[8, "className", 0], [4, "display", null], [8, "innerHTML", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (((_co.options == null) ? null : _co.options.labelHtmlClass) || ""); var currVal_1 = (((_co.options == null) ? null : _co.options.notitle) ? "none" : ""); var currVal_2 = ((_co.options == null) ? null : _co.options.title); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
function View_CheckboxesComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "label", [], [[1, "for", 0], [8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, "input", [["type", "checkbox"]], [[1, "required", 0], [8, "checked", 0], [8, "className", 0], [8, "disabled", 0], [8, "id", 0], [8, "name", 0], [8, "readOnly", 0], [8, "value", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.updateValue($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, "span", [], [[8, "innerHTML", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = ((("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)) + "/") + _v.context.$implicit.value); var currVal_1 = ((((_co.options == null) ? null : _co.options.itemLabelHtmlClass) || "") + (_v.context.$implicit.checked ? (((" " + (((_co.options == null) ? null : _co.options.activeClass) || "")) + " ") + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.selected)) || "")) : (" " + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.unselected)) || "")))); _ck(_v, 0, 0, currVal_0, currVal_1); var currVal_2 = ((_co.options == null) ? null : _co.options.required); var currVal_3 = _v.context.$implicit.checked; var currVal_4 = (((_co.options == null) ? null : _co.options.fieldHtmlClass) || ""); var currVal_5 = _co.controlDisabled; var currVal_6 = ((("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)) + "/") + _v.context.$implicit.value); var currVal_7 = ((_v.context.$implicit == null) ? null : _v.context.$implicit.name); var currVal_8 = (((_co.options == null) ? null : _co.options.readonly) ? "readonly" : null); var currVal_9 = _v.context.$implicit.value; _ck(_v, 1, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); var currVal_10 = _v.context.$implicit.name; _ck(_v, 2, 0, currVal_10); }); }
function View_CheckboxesComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "div", [], [[8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxesComponent_3)), i0.ɵdid(2, 802816, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.checkboxList; _ck(_v, 2, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (((_co.options == null) ? null : _co.options.htmlClass) || ""); _ck(_v, 0, 0, currVal_0); }); }
function View_CheckboxesComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "div", [], [[8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, "label", [], [[1, "for", 0], [8, "className", 0]], null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, "input", [["type", "checkbox"]], [[1, "required", 0], [8, "checked", 0], [8, "className", 0], [8, "disabled", 0], [8, "id", 0], [8, "name", 0], [8, "readOnly", 0], [8, "value", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.updateValue($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, "span", [], [[8, "innerHTML", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (((_co.options == null) ? null : _co.options.htmlClass) || ""); _ck(_v, 0, 0, currVal_0); var currVal_1 = ((("control" + ((_co.layoutNode == null) ? null : _co.layoutNode._id)) + "/") + _v.context.$implicit.value); var currVal_2 = ((((_co.options == null) ? null : _co.options.itemLabelHtmlClass) || "") + (_v.context.$implicit.checked ? (((" " + (((_co.options == null) ? null : _co.options.activeClass) || "")) + " ") + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.selected)) || "")) : (" " + (((_co.options == null) ? null : ((_co.options.style == null) ? null : _co.options.style.unselected)) || "")))); _ck(_v, 1, 0, currVal_1, currVal_2); var currVal_3 = ((_co.options == null) ? null : _co.options.required); var currVal_4 = _v.context.$implicit.checked; var currVal_5 = (((_co.options == null) ? null : _co.options.fieldHtmlClass) || ""); var currVal_6 = _co.controlDisabled; var currVal_7 = ((((_co.options == null) ? null : _co.options.name) + "/") + _v.context.$implicit.value); var currVal_8 = ((_v.context.$implicit == null) ? null : _v.context.$implicit.name); var currVal_9 = (((_co.options == null) ? null : _co.options.readonly) ? "readonly" : null); var currVal_10 = _v.context.$implicit.value; _ck(_v, 2, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_11 = ((_v.context.$implicit == null) ? null : _v.context.$implicit.name); _ck(_v, 3, 0, currVal_11); }); }
function View_CheckboxesComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "div", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxesComponent_5)), i0.ɵdid(2, 802816, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.checkboxList; _ck(_v, 2, 0, currVal_0); }, null); }
export function View_CheckboxesComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxesComponent_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxesComponent_2)), i0.ɵdid(3, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CheckboxesComponent_4)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = ((_co.options == null) ? null : _co.options.title); _ck(_v, 1, 0, currVal_0); var currVal_1 = (_co.layoutOrientation === "horizontal"); _ck(_v, 3, 0, currVal_1); var currVal_2 = (_co.layoutOrientation === "vertical"); _ck(_v, 5, 0, currVal_2); }, null); }
export function View_CheckboxesComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "checkboxes-widget", [], null, null, null, View_CheckboxesComponent_0, RenderType_CheckboxesComponent)), i0.ɵdid(1, 114688, null, 0, i2.CheckboxesComponent, [i3.JsonSchemaFormService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var CheckboxesComponentNgFactory = i0.ɵccf("checkboxes-widget", i2.CheckboxesComponent, View_CheckboxesComponent_Host_0, { layoutNode: "layoutNode", layoutIndex: "layoutIndex", dataIndex: "dataIndex" }, {}, []);
export { CheckboxesComponentNgFactory as CheckboxesComponentNgFactory };
//# sourceMappingURL=checkboxes.component.ngfactory.js.map
